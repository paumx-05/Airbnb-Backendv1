#!/bin/bash

# Script de prueba para verificar la integraci√≥n del m√≥dulo de usuarios
# Este script verifica que todos los mocks hayan sido reemplazados por servicios reales

echo "üîç Verificando integraci√≥n del m√≥dulo de usuarios..."

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Funci√≥n para verificar si un archivo existe
check_file_exists() {
    if [ -f "$1" ]; then
        echo -e "${GREEN}‚úÖ $1 existe${NC}"
        return 0
    else
        echo -e "${RED}‚ùå $1 no existe${NC}"
        return 1
    fi
}

# Funci√≥n para verificar si un archivo contiene texto espec√≠fico
check_file_contains() {
    if grep -q "$2" "$1" 2>/dev/null; then
        echo -e "${RED}‚ùå $1 contiene '$2' (deber√≠a ser removido)${NC}"
        return 1
    else
        echo -e "${GREEN}‚úÖ $1 no contiene '$2'${NC}"
        return 0
    fi
}

# Funci√≥n para verificar si un archivo contiene imports de servicios reales
check_real_imports() {
    if grep -q "from '@/lib/api/" "$1" 2>/dev/null; then
        echo -e "${GREEN}‚úÖ $1 usa servicios reales${NC}"
        return 0
    else
        echo -e "${YELLOW}‚ö†Ô∏è $1 podr√≠a no estar usando servicios reales${NC}"
        return 1
    fi
}

echo ""
echo "üìÅ Verificando archivos de servicios API..."

# Verificar que los servicios API existen
check_file_exists "lib/api/auth.ts"
check_file_exists "lib/api/properties.ts"
check_file_exists "lib/api/reservations.ts"
check_file_exists "lib/api/config.ts"

echo ""
echo "üóëÔ∏è Verificando que los mocks han sido removidos..."

# Verificar que los archivos mock no existen o han sido reemplazados
if [ -f "lib/auth-mock.ts" ]; then
    echo -e "${RED}‚ùå lib/auth-mock.ts a√∫n existe (deber√≠a ser removido)${NC}"
else
    echo -e "${GREEN}‚úÖ lib/auth-mock.ts ha sido removido${NC}"
fi

echo ""
echo "üîó Verificando integraci√≥n en componentes..."

# Verificar que los componentes usan servicios reales
check_real_imports "context/AuthContext.tsx"
check_real_imports "context/SearchContext.tsx"
check_real_imports "context/ReservationCartContext.tsx"
check_real_imports "components/PropertyDetail.tsx"
check_real_imports "components/AirbnbResults.tsx"
check_real_imports "components/ReservationSidebar.tsx"
check_real_imports "hooks/useLocationSearch.ts"

echo ""
echo "üß™ Verificando archivos de prueba..."

# Verificar que los archivos de prueba existen
check_file_exists "tests/user-module-integration.spec.ts"
check_file_exists "playwright.config.ts"
check_file_exists "playwright-flow-user-module-integration.md"

echo ""
echo "üìã Verificando documentaci√≥n..."

# Verificar que la documentaci√≥n est√° actualizada
check_file_exists "playwright-flow-user-module-integration.md"

echo ""
echo "üîç Verificando que no hay referencias a mocks..."

# Verificar que no hay referencias a mocks en archivos clave
check_file_contains "context/AuthContext.tsx" "auth-mock"
check_file_contains "context/SearchContext.tsx" "mockProperties"
check_file_contains "components/PropertyDetail.tsx" "mockProperties"
check_file_contains "hooks/useLocationSearch.ts" "mockData"

echo ""
echo "üìä Resumen de verificaci√≥n:"

# Contar archivos de servicios API
api_files=$(find lib/api -name "*.ts" 2>/dev/null | wc -l)
echo -e "Servicios API implementados: ${GREEN}$api_files${NC}"

# Contar archivos de prueba
test_files=$(find tests -name "*.spec.ts" 2>/dev/null | wc -l)
echo -e "Archivos de prueba: ${GREEN}$test_files${NC}"

# Verificar que el backend est√° configurado
if grep -q "NEXT_PUBLIC_API_URL" "env.example" 2>/dev/null; then
    echo -e "Configuraci√≥n de backend: ${GREEN}‚úÖ Configurada${NC}"
else
    echo -e "Configuraci√≥n de backend: ${YELLOW}‚ö†Ô∏è Revisar configuraci√≥n${NC}"
fi

echo ""
echo "üéØ Pr√≥ximos pasos:"
echo "1. Ejecutar 'npm run dev' para iniciar el frontend"
echo "2. Asegurar que el backend est√© corriendo en puerto 5000"
echo "3. Ejecutar 'npx playwright test' para las pruebas E2E"
echo "4. Verificar que todas las funcionalidades trabajen con el backend real"

echo ""
echo "‚úÖ Verificaci√≥n completada!"
